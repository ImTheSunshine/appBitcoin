{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DEBORARIBEIRODESOUZA\\\\Desktop\\\\Aplicativo Bitcoin\\\\appbitcoin\\\\src\\\\Bitcoin\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport api from \"../services/api\";\n\nvar Bitcoin = function (_Component) {\n  _inherits(Bitcoin, _Component);\n\n  var _super = _createSuper(Bitcoin);\n\n  function Bitcoin() {\n    var _this;\n\n    _classCallCheck(this, Bitcoin);\n\n    _this = _super.call(this);\n    _this.state = {\n      vbitcoin: 0\n    };\n    _this.consultaPrecoBitcoin = _this.consultaPrecoBitcoin.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Bitcoin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var response, valor;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(api.get('ticker'));\n\n            case 2:\n              response = _context.sent;\n              valor = response.data.BRL['buy'];\n              this.setState({\n                bitcoin: valor\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"AtualizaValor\",\n    value: function AtualizaValor() {\n      var response, valor;\n      return _regeneratorRuntime.async(function AtualizaValor$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(api.get('ticker'));\n\n            case 2:\n              response = _context2.sent;\n              valor = response.data.BRL['buy'];\n              this.setState({\n                bitcoin: valor\n              });\n              alert(\"O valor foi atualizado!\");\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/bitcoin.png\"),\n        style: {\n          width: 450,\n          height: 169\n        },\n        resizeMode: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.textoBitcoin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, this.state.vbitcoin), React.createElement(TouchableOpacity, {\n        style: styles.botao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textoBotao,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \"Atualizar\")));\n    }\n  }]);\n\n  return Bitcoin;\n}(Component);\n\nexport default Bitcoin;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textoBitcoin: {\n    fontSize: 32,\n    color: '#363636'\n  },\n  botao: {\n    backgroundColor: '#FFA500',\n    marginTop: 50,\n    width: 300,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 10\n  },\n  textoBotao: {\n    fontSize: 32,\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["C:/Users/DEBORARIBEIRODESOUZA/Desktop/Aplicativo Bitcoin/appbitcoin/src/Bitcoin/index.js"],"names":["React","Component","useState","api","Bitcoin","state","vbitcoin","consultaPrecoBitcoin","bind","get","response","valor","data","BRL","setState","bitcoin","alert","require","width","height","styles","textoBitcoin","botao","textoBotao","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","fontSize","color","marginTop","borderRadius"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;;;AAGA,OAAOC,GAAP;;IAEMC,O;;;;;AACN,qBAAa;AAAA;;AAAA;;AACT;AAGA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAIA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,+BAA5B;AARS;AAUR;;;;WAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC2BL,GAAG,CAACM,GAAJ,CAAQ,QAAR,CAD3B;;AAAA;AACUC,cAAAA,QADV;AAGQC,cAAAA,KAHR,GAGgBD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,KAAlB,CAHhB;AAKI,mBAAKC,QAAL,CAAc;AACVC,gBAAAA,OAAO,EAAGJ;AADA,eAAd;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC2BR,GAAG,CAACM,GAAJ,CAAQ,QAAR,CAD3B;;AAAA;AACUC,cAAAA,QADV;AAGQC,cAAAA,KAHR,GAGgBD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,KAAlB,CAHhB;AAKI,mBAAKC,QAAL,CAAc;AACVC,gBAAAA,OAAO,EAAGJ;AADA,eAAd;AAIAK,cAAAA,KAAK,CAAC,yBAAD,CAAL;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAYI,kBAAQ;AACJ,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,KAAD;AACI,QAAA,MAAM,EAAEC,OAAO,4BADnB;AAEI,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC,GAAP;AAAYC,UAAAA,MAAM,EAAC;AAAnB,SAFX;AAGI,QAAA,UAAU,EAAC,QAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmC,KAAKhB,KAAL,CAAWC,QAA9C,CARJ,EAUI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEc,MAAM,CAACE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAVJ,CADJ;AAmBH;;;;EAvDiBtB,S;;AA0DtB,eAAeG,OAAf;AAEA,IAAMgB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAQ7BT,EAAAA,YAAY,EAAC;AACTU,IAAAA,QAAQ,EAAC,EADA;AAETC,IAAAA,KAAK,EAAE;AAFE,GARgB;AAa7BV,EAAAA,KAAK,EAAC;AACFM,IAAAA,eAAe,EAAE,SADf;AAEFK,IAAAA,SAAS,EAAC,EAFR;AAGFf,IAAAA,KAAK,EAAC,GAHJ;AAIFW,IAAAA,UAAU,EAAE,QAJV;AAKFC,IAAAA,cAAc,EAAC,QALb;AAMFI,IAAAA,YAAY,EAAC;AANX,GAbuB;AAsB7BX,EAAAA,UAAU,EAAC;AACPQ,IAAAA,QAAQ,EAAC,EADF;AAEPC,IAAAA,KAAK,EAAC;AAFC;AAtBkB,CAAlB,CAAf","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\r\n\r\nimport api from '../services/api';\r\n\r\nclass Bitcoin extends Component{\r\nconstructor(){\r\n    super();\r\n\r\n    //Criar um state\r\n    this.state = {\r\n        vbitcoin: 0\r\n    }\r\n\r\n    this.consultaPrecoBitcoin = this.consultaPrecoBitcoin.bind(this);\r\n\r\n    }\r\n\r\nasync componentDidMount(){\r\n    const response = await api.get('ticker'); \r\n\r\n    let valor = response.data.BRL['buy'];\r\n\r\n    this.setState({\r\n        bitcoin : valor\r\n    });\r\n    }\r\n\r\nasync AtualizaValor() {\r\n    const response = await api.get('ticker'); \r\n\r\n    let valor = response.data.BRL['buy'];\r\n\r\n    this.setState({\r\n        bitcoin : valor\r\n    });\r\n\r\n    alert(\"O valor foi atualizado!\");\r\n}\r\n\r\n    render(){\r\n        return(\r\n            <View>\r\n\r\n                <Image\r\n                    source={require('../../assets/bitcoin.png')}\r\n                    style={{width:450, height:169}}\r\n                    resizeMode='center'\r\n                />\r\n\r\n                <Text style={styles.textoBitcoin}>{this.state.vbitcoin}</Text>\r\n\r\n                <TouchableOpacity style={styles.botao}>\r\n                    <Text style={styles.textoBotao}>Atualizar</Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n\r\n        );\r\n\r\n    }\r\n}  // Fecha a classe Bitcoin\r\n\r\nexport default Bitcoin;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    textoBitcoin:{\r\n        fontSize:32,\r\n        color: '#363636',\r\n    },\r\n\r\n    botao:{\r\n        backgroundColor: '#FFA500',\r\n        marginTop:50,\r\n        width:300,\r\n        alignItems: 'center',\r\n        justifyContent:'center',\r\n        borderRadius:10\r\n    },\r\n\r\n    textoBotao:{\r\n        fontSize:32,\r\n        color:'#fff'\r\n    },\r\n\r\n\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}